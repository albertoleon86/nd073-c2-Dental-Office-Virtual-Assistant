# ============================================================
#  Deploy Dentist Scheduler API to Azure Web App (OIDC login)
# ============================================================

name: Deploy Dentist Scheduler API

on:
  push:
    branches: [ master ]          # c√°mbialo a main si tu rama principal es main
  workflow_dispatch:

env:
  WORKING_DIR: starter/ContosoDentistryScheduler  # ruta real del API
  ZIP_NAME: release.zip
  APP_NAME: dentist-scheduler-api                 # nombre exacto del Web App

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node 20 LTS
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'                    # pon '18.x' si prefieres

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: Build (if present)
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run build --if-present

      - name: Create deployment zip
        run: zip -r ${{ env.ZIP_NAME }} ${{ env.WORKING_DIR }}/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: scheduler-api
          path: ${{ env.ZIP_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write       # necesario para login OIDC
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: scheduler-api

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FABCF1CD79CE46F6BC2FCE08842CA77D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9070E2D93A7B48B5B44740E8B0AF92A9 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_828001770F474AB59400C4225F4DC4A7 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          slot-name: Production
          package:  ${{ env.ZIP_NAME }}
