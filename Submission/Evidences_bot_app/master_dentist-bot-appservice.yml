# ============================================================
#  Deploy Dentist Scheduler API to Azure Web App (OIDC login)
# ============================================================
#  Requisitos:
#    • Web App: dentist-scheduler-api   (Linux, Node)
#    • Identidad federada configurada y secretos:
#        AZUREAPPSERVICE_CLIENTID_…
#        AZUREAPPSERVICE_TENANTID_…
#        AZUREAPPSERVICE_SUBSCRIPTIONID_…
# ============================================================

name: Deploy Dentist Scheduler API

on:
  push:
    branches: [ master ]          # Cámbialo a main si tu rama principal es main
  workflow_dispatch:

env:
  WORKING_DIR: starter/ContosoDentistryScheduler  # Carpeta real del API
  ZIP_NAME: release.zip
  APP_NAME: dentist-scheduler-api                 # Nombre exacto del Web App

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # 1 ▸ Checkout repo
      - uses: actions/checkout@v4

      # 2 ▸ Setup Node
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # 3 ▸ Install dependencies
      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      # 4 ▸ Build (optional)
      - name: Build (if present)
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run build --if-present

      # 5 ▸ Copy API files to workspace root
      - name: Copy API files to workspace root
        run: rsync -a ${{ env.WORKING_DIR }}/ ./

      # 6 ▸ Create deployment zip
      - name: Create deployment ZIP
        run: zip -r ${{ env.ZIP_NAME }} ./* -x ".git/*" ".github/*"

      # 7 ▸ Upload build artifact
      - uses: actions/upload-artifact@v4
        with:
          name: scheduler-api
          path: ${{ env.ZIP_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      # 1 ▸ Download artifact
      - uses: actions/download-artifact@v4
        with:
          name: scheduler-api

      # 2 ▸ Azure login (OIDC)
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:      ${{ secrets.AZUREAPPSERVICE_CLIENTID_FABCF1CD79CE46F6BC2FCE08842CA77D }}
          tenant-id:      ${{ secrets.AZUREAPPSERVICE_TENANTID_9070E2D93A7B48B5B44740E8B0AF92A9 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_828001770F474AB59400C4225F4DC4A7 }}

      # 3 ▸ Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name:   ${{ env.APP_NAME }}
          slot-name:  Production
          package:    ${{ env.ZIP_NAME }}
          clean:      true    # limpia wwwroot antes de copiar
          restart:    true    # reinicia después del deploy

